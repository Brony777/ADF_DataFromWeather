{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AdfWeathertb"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"SandboxAzure_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SandboxAzure'"
		},
		"stagerawdata_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'stagerawdata'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=smweather;EndpointSuffix=core.windows.net;"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1101-200746-l7lbyi4n"
		},
		"GiosRestApi_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.gios.gov.pl/pjp-api/rest/"
		},
		"azk_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://tobepasswords.vault.azure.net/"
		},
		"stagerawdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://smweather.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1132735053060448.8.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GiosRestApi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('GiosRestApi_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SandboxAzure')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SandboxAzure_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azk')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('azk_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stagerawdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('stagerawdata_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('stagerawdata_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntRunTImeLocalDB')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Save')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For each file in folder",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.CollectionOfFiles",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DataLake_LoadStructureOfContainer",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[DataLake_LoadStructureOfContainer]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": {
													"value": "@pipeline().parameters.ContainerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"CreatedDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"FileName": {
												"value": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"type": "String"
											},
											"FolderName": {
												"value": {
													"value": "@pipeline().parameters.FolderName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SandboxAzure",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CollectionOfFiles": {
						"type": "array"
					},
					"ContainerName": {
						"type": "string"
					},
					"FolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BlobStorage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SandboxAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stagerawdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADLS_FlatFiles"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": "stagerawdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stagerawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllFlatFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SandboxAzure",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "stationName",
						"type": "nvarchar"
					},
					{
						"name": "gegrLat",
						"type": "nvarchar"
					},
					{
						"name": "gegrLon",
						"type": "nvarchar"
					},
					{
						"name": "Cityid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cityname",
						"type": "nvarchar"
					},
					{
						"name": "communeName",
						"type": "nvarchar"
					},
					{
						"name": "districtName",
						"type": "nvarchar"
					},
					{
						"name": "provinceName",
						"type": "nvarchar"
					},
					{
						"name": "addressStreet",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AllStations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SandboxAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllSensors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stagerawdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"StationId": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"folder": {
					"name": "ADLS_FlatFiles"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('Station_',dataset().StationId,'_T:',string(formatDateTime(utcnow(),'HH:mm:ss')),'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@string(formatDateTime(utcnow(),'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": "stagerawdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stagerawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllStationFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stagerawdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string",
						"defaultValue": "stagerawdata"
					},
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADLS_FlatFiles"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "integer"
						},
						"stationName": {
							"type": "string"
						},
						"gegrLat": {
							"type": "string"
						},
						"gegrLon": {
							"type": "string"
						},
						"city": {
							"type": "object",
							"properties": {
								"id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"commune": {
									"type": "object",
									"properties": {
										"communeName": {
											"type": "string"
										},
										"districtName": {
											"type": "string"
										},
										"provinceName": {
											"type": "string"
										}
									}
								}
							}
						},
						"addressStreet": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stagerawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllStations')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SandboxAzure",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AzureDBSandbox"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "stationName",
						"type": "nvarchar"
					},
					{
						"name": "gegrLat",
						"type": "nvarchar"
					},
					{
						"name": "gegrLon",
						"type": "nvarchar"
					},
					{
						"name": "Cityid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cityname",
						"type": "nvarchar"
					},
					{
						"name": "communeName",
						"type": "nvarchar"
					},
					{
						"name": "districtName",
						"type": "nvarchar"
					},
					{
						"name": "provinceName",
						"type": "nvarchar"
					},
					{
						"name": "addressStreet",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AllStations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SandboxAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllStations_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stagerawdata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADLS_FlatFiles"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('Stations',string(formatDateTime(utcnow(),'HH:mm:ss')),'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@string(formatDateTime(utcnow(),'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": "stagerawdata"
					},
					"encodingName": "UTF-8 without BOM"
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "integer"
						},
						"stationName": {
							"type": "string"
						},
						"gegrLat": {
							"type": "string"
						},
						"gegrLon": {
							"type": "string"
						},
						"city": {
							"type": "object",
							"properties": {
								"id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"commune": {
									"type": "object",
									"properties": {
										"communeName": {
											"type": "string"
										},
										"districtName": {
											"type": "string"
										},
										"provinceName": {
											"type": "string"
										}
									}
								}
							}
						},
						"addressStreet": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stagerawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sensor_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stagerawdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADLS_FlatFiles"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "integer"
						},
						"stationId": {
							"type": "integer"
						},
						"param": {
							"type": "object",
							"properties": {
								"paramName": {
									"type": "string"
								},
								"paramFormula": {
									"type": "string"
								},
								"paramCode": {
									"type": "string"
								},
								"idParam": {
									"type": "integer"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stagerawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GIOS_RestApi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GiosRestApi",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"RestApiRelative": {
						"type": "string",
						"defaultValue": "station/findAll"
					}
				},
				"folder": {
					"name": "RestApi"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().RestApiRelative",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GiosRestApi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sensors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SandboxAzure",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AzureDBSandbox"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "AllSensors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SandboxAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "azk",
							"type": "LinkedServiceReference"
						},
						"secretName": "StorageKey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IntRunTImeLocalDB",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntRunTImeLocalDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllItemsFromDataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stagerawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "stagerawdata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "integer"
						},
						"stationName": {
							"type": "string"
						},
						"gegrLat": {
							"type": "string"
						},
						"gegrLon": {
							"type": "string"
						},
						"city": {
							"type": "object",
							"properties": {
								"id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"commune": {
									"type": "object",
									"properties": {
										"communeName": {
											"type": "string"
										},
										"districtName": {
											"type": "string"
										},
										"provinceName": {
											"type": "string"
										}
									}
								}
							}
						},
						"addressStreet": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stagerawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllFlatFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get List of all folders",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AllItemsFromDataLake",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For each folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get List of all folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get List of all folders').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Items in folder",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Set FolderName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AllFiles",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@variables('FolderName')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "JsonReadSettings"
										}
									}
								},
								{
									"name": "Set FolderName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FolderName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Items in folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Save",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CollectionOfFiles": {
												"value": "@activity('Items in folder').output.childItems",
												"type": "Expression"
											},
											"ContainerName": "stagerawdata",
											"FolderName": {
												"value": "@variables('FolderName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"FolderName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BlobStorage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AllItemsFromDataLake')]",
				"[concat(variables('factoryId'), '/datasets/AllFiles')]",
				"[concat(variables('factoryId'), '/pipelines/Save')]"
			]
		}
	]
}